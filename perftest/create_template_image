#!/bin/sh -e

# Copyright (c) 2022 Firebuild Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Create an image that already contains some of the essential stuff,
# including build-essential and whatever is needed to build firebuild.
#
# The lxc profile "firebuild-perftest" has to already exist.
#
# See README_SETUP.txt for further details.

WITH_DIFFOSCOPE=false

while [ -n "$1" ]; do
    case "$1" in
        --with-diffoscope)
            WITH_DIFFOSCOPE=true
            shift
            ;;
        *)
            break;
            ;;
    esac
done

BASE_IMG="${1:-ubuntu:jammy}"

echo " · Launching lxc instance"
lxc delete --force firebuild-perftest-image-template 2> /dev/null || true
lxc launch -p firebuild-perftest "$BASE_IMG" firebuild-perftest-image-template

echo " · Waiting for system to start"
case $BASE_IMG in
    ubuntu*:bionic*|ubuntu*:focal*)
        sleep 1
        ;;
    *)
        # No sleep needed
        ;;
esac

lxc exec firebuild-perftest-image-template -- systemctl is-system-running --wait || true

echo " · Adding deb-src entries to sources.list"
lxc exec firebuild-perftest-image-template -- sh -c 'sed "s/^deb /deb-src /" < /etc/apt/sources.list > /etc/apt/sources.list.d/deb-src.list'

if [ -n "$(apt-config dump | grep Proxy)" ]; then
    apt-config dump | grep Proxy | lxc exec firebuild-perftest-image-template -- sh -c 'cat > /etc/apt/apt.conf.d/99-firebuild-apt-proxy'
fi

# Always install phased updates to fix occasional uninstallability problems, like:
# https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1979579
echo 'APT::Get::Always-Include-Phased-Updates "true";' | lxc exec firebuild-perftest-image-template -- sh -c 'cat > /etc/apt/apt.conf.d/99-firebuild-phased-updates'

if lxc exec firebuild-perftest-image-template -- sh -c 'dpkg -l needrestart 2> /dev/null | grep -q "^i"'; then
    echo " · Removing needrestart"
    lxc exec firebuild-perftest-image-template -- eatmydata apt-get -y purge needrestart
fi

case $BASE_IMG in
    ubuntu*:bionic*)
        # ubuntu-toolchain-r/test distributes GCC-10
        PPAS="ppa:firebuild/build-deps ppa:ubuntu-toolchain-r/test"
        ;;
    ubuntu*:focal*)
        PPAS="ppa:firebuild/build-deps"
        ;;
    *)
        PPAS=""
esac

if [ -n "$PPAS" ]; then
    echo " . Adding PPAs for backported and fixed packages"
    # run apt-get update before adding the PPAs to make sure that network is already up
    lxc exec firebuild-perftest-image-template -- apt-get update -qq
    for ppa in $PPAS; do
        lxc exec firebuild-perftest-image-template -- add-apt-repository -y -n $ppa
    done
fi

lxc exec firebuild-perftest-image-template -- apt-get update -qq
lxc exec firebuild-perftest-image-template -- apt-get install -yqq eatmydata
lxc exec firebuild-perftest-image-template -- eatmydata apt-get upgrade -yqq

echo " · Disabling man-db creation"
lxc exec firebuild-perftest-image-template -- sh -c 'echo man-db man-db/auto-update boolean false | debconf-set-selections'

echo " · Removing packages with background jobs likely interfering with tests"
lxc exec firebuild-perftest-image-template -- eatmydata apt-get -yqq purge rsyslog unattended-upgrades || true

# This fails LP: #1878674
lxc exec firebuild-perftest-image-template -- eatmydata apt-get -yqq purge snapd || true

echo " · Disabling APT updates"
lxc exec firebuild-perftest-image-template -- bash -c 'sed -i s/1/0/ /etc/apt/apt.conf.d/10periodic 2> /dev/null || true'

echo " · Installing needed and most likely needed packages"
lxc exec firebuild-perftest-image-template -- eatmydata apt-get install -qqy git python3 graphviz build-essential

case $BASE_IMG in
    ubuntu*:bionic*)
        # firebuild needs those fresher dependencies to build on Bionic
        lxc exec firebuild-perftest-image-template -- eatmydata apt-get install -qqy cmake debhelper/bionic-backports dwz/bionic-backports
        ;;
esac

if $WITH_DIFFOSCOPE; then
    lxc exec firebuild-perftest-image-template -- eatmydata apt-get install -qqy fakeroot diffoscope
fi

echo " · Purging unneeded packages"
lxc exec firebuild-perftest-image-template -- eatmydata apt-get -yqq autoremove || true

echo " · Creating ubuntu user if needed"
lxc exec firebuild-perftest-image-template -- addgroup ubuntu --gid 1000 --disabled-password || true
lxc exec firebuild-perftest-image-template -- adduser ubuntu --uid 1000 --gid 1000 --disabled-password --gecos "" || true

echo " · Stopping lxc instance"
lxc stop firebuild-perftest-image-template

if lxc image list | grep -qw firebuild-perftest-image-template; then
  echo " · Removing previous lxc image"
  lxc image delete firebuild-perftest-image-template
fi

echo " · Creating lxc image"
lxc publish --compression none firebuild-perftest-image-template --alias firebuild-perftest-image-template

echo " · Deleting lxc instance"
lxc delete firebuild-perftest-image-template

echo " · Done"
